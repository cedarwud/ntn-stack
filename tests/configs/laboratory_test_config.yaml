# NTN Stack 實驗室驗測配置
# 根據 TODO.md 14. 實驗室驗測準備與執行要求設計

laboratory_test_config:
  metadata:
    version: "1.0.0"
    created_date: "2024-12-19"
    description: "NTN Stack 實驗室驗測完整配置"
    test_objectives:
      - "端到端延遲 < 50ms 驗證"
      - "連接中斷後 2s 內重建連線驗證"
      - "SINR、吞吐量、干擾避讓量化測試"
      - "系統功能完整性驗證"
      - "性能基準達成評估"

  # 測試環境配置
  environment:
    docker_network: "compose_netstack-core"
    services:
      netstack:
        container_name: "netstack-api"
        url: "http://localhost:8080"
        internal_url: "http://172.20.0.40:8080"
        health_endpoint: "/health"
        metrics_endpoint: "/metrics"
        timeout: 30
      simworld:
        container_name: "simworld_backend"
        url: "http://localhost:8888"
        internal_url: "http://172.20.0.2:8000"
        health_endpoint: "/api/v1/wireless/health"
        timeout: 30
      database:
        mongo_url: "mongodb://172.20.0.50:27017/open5gs"
        redis_url: "redis://172.20.0.60:6379/0"
        
  # 關鍵性能指標基準
  performance_benchmarks:
    latency:
      e2e_target_ms: 50
      e2e_warning_ms: 40
      e2e_critical_ms: 60
      api_response_target_ms: 100
      api_response_warning_ms: 200
      
    throughput:
      min_mbps: 10
      target_mbps: 50
      peak_mbps: 100
      
    reliability:
      connection_recovery_target_s: 2.0
      connection_recovery_warning_s: 1.5
      connection_recovery_critical_s: 3.0
      uptime_target_percent: 99.9
      
    signal_quality:
      sinr_target_db: 20
      sinr_minimum_db: 10
      ber_target: 1e-6
      per_target: 1e-3

  # 測試場景配置
  test_scenarios:
    basic_connectivity:
      name: "基本連接測試"
      duration_seconds: 60
      test_cases:
        - "health_check"
        - "api_availability" 
        - "database_connectivity"
        - "service_discovery"
        
    performance_validation:
      name: "性能驗證測試"
      duration_seconds: 300
      test_cases:
        - "latency_measurement"
        - "throughput_assessment"
        - "concurrent_users"
        - "resource_utilization"
        
    interference_testing:
      name: "干擾測試"
      duration_seconds: 180
      interference_types:
        - "frequency_jamming"
        - "signal_blocking"
        - "noise_injection"
      test_cases:
        - "interference_detection"
        - "interference_mitigation"
        - "frequency_hopping"
        - "beam_switching"
        
    failover_testing:
      name: "故障切換測試"
      duration_seconds: 240
      test_cases:
        - "satellite_handover"
        - "mesh_failover"
        - "service_recovery"
        - "data_integrity"

  # UAV 測試配置
  uav_test_config:
    scenarios:
      static_position:
        position: [25.0330, 121.5654, 100]  # 台北上空100m
        duration_seconds: 120
      mobility_pattern:
        waypoints:
          - [25.0330, 121.5654, 100]
          - [25.0430, 121.5754, 150]
          - [25.0530, 121.5854, 200]
        speed_ms: 10
        duration_seconds: 300
      coverage_area:
        center: [25.0330, 121.5654]
        radius_km: 5
        altitude_range: [50, 300]
        
  # 衛星配置
  satellite_config:
    test_satellites:
      iss:
        norad_id: 25544
        frequency_mhz: 437.8
        power_dbm: 30
      starlink_sample:
        norad_ids: [44714, 44716, 44717]  # STARLINK-1008, 1010, 1011
        frequency_mhz: 12000              # Starlink Ku-band
        power_dbm: 40
      kuiper_sample:
        norad_ids: [63724, 63725, 63726]  # KUIPER-00008, 00009, 00010  
        frequency_mhz: 12750              # Kuiper Ka-band
        power_dbm: 42
    orbit_parameters:
      altitude_km: 550
      inclination_deg: 53
      period_minutes: 95

  # 通信參數
  communication_config:
    frequencies:
      lte_band_3: 1800
      lte_band_7: 2600
      nr_n78: 3500
      satellite_ka: 20000
    modulation:
      schemes: ["QPSK", "16QAM", "64QAM", "256QAM"]
      coding_rates: [0.5, 0.75, 1.0]
    beamforming:
      enabled: true
      beam_patterns: ["omnidirectional", "directional", "adaptive"]

  # 測試數據配置
  test_data:
    payload_sizes:
      small: 64      # bytes
      medium: 1024   # bytes
      large: 8192    # bytes
      bulk: 65536    # bytes
    traffic_patterns:
      constant_rate:
        packets_per_second: 100
        duration_seconds: 60
      burst_traffic:
        burst_size_packets: 1000
        burst_interval_seconds: 10
        duration_seconds: 120
      background_load:
        utilization_percent: 30
        duration_seconds: 300

  # 監控和日誌配置
  monitoring:
    metrics_collection:
      interval_seconds: 1
      retention_hours: 24
    log_levels:
      default: "INFO"
      performance: "DEBUG"
      network: "DEBUG"
    alerts:
      latency_threshold_ms: 60
      error_rate_threshold_percent: 5
      resource_usage_threshold_percent: 90

  # 報告配置
  reporting:
    output_formats: ["json", "html", "csv"]
    include_charts: true
    detailed_metrics: true
    comparison_with_baseline: true
    failure_analysis: true
    
  # 測試順序和依賴
  test_execution:
    phases:
      - name: "環境準備"
        tests: ["environment_setup", "service_health_check"]
        required: true
      - name: "基本功能驗證"
        tests: ["basic_connectivity", "api_functionality"]
        depends_on: ["環境準備"]
      - name: "性能測試"
        tests: ["performance_validation", "load_testing"]
        depends_on: ["基本功能驗證"]
      - name: "高級功能測試"
        tests: ["interference_testing", "failover_testing"]
        depends_on: ["性能測試"]
      - name: "綜合驗證"
        tests: ["end_to_end_validation", "stress_testing"]
        depends_on: ["高級功能測試"]
        
    retry_policy:
      max_retries: 3
      retry_delay_seconds: 5
      exponential_backoff: true
      
    timeout_policy:
      default_timeout_seconds: 300
      critical_test_timeout_seconds: 600
      
  # 成功標準
  success_criteria:
    overall_pass_rate: 100  # 必須 100% 通過
    critical_tests:
      - "latency_under_50ms"
      - "recovery_under_2s" 
      - "basic_connectivity"
      - "api_functionality"
    performance_requirements:
      - metric: "e2e_latency"
        threshold_ms: 50
        operator: "less_than"
      - metric: "recovery_time"
        threshold_s: 2.0
        operator: "less_than"
      - metric: "success_rate"
        threshold_percent: 99.9
        operator: "greater_than_equal" 