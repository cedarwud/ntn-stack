networks:
  netstack-network:
    driver: bridge
services:
  netstack-api-phase1:
    build:
      context: ../..
      dockerfile: phase1_refactor/deployment/Dockerfile.phase1
    depends_on:
    - netstack-rl-postgres
    environment:
      PHASE1_API_TIMEOUT: '30'
      PHASE1_CACHE_SIZE: '2000'
      PHASE1_LOG_LEVEL: INFO
      PHASE1_OUTPUT_PATH: /app/data
      PHASE1_TLE_DATA_PATH: /netstack/tle_data
      PYTHONPATH: /app:/app/phase1_refactor:/app/netstack
    healthcheck:
      interval: 30s
      retries: 3
      start_period: 60s
      test:
      - CMD-SHELL
      - curl -f http://localhost:8080/health || exit 1
      timeout: 10s
    networks:
    - netstack-network
    ports:
    - 8080:8080
    - 8001:8001
    restart: unless-stopped
    volumes:
    - ./../../tle_data:/netstack/tle_data
    - ./../../data:/app/data
    - ./../../logs:/app/logs
    - ./../../phase1_refactor:/app/phase1_refactor
  netstack-rl-postgres:
    environment:
      POSTGRES_DB: rl_research
      POSTGRES_PASSWORD: rl_password
      POSTGRES_USER: rl_user
    healthcheck:
      interval: 10s
      retries: 5
      test:
      - CMD-SHELL
      - pg_isready -U rl_user -d rl_research
      timeout: 5s
    image: postgres:15-alpine
    networks:
    - netstack-network
    ports:
    - 5432:5432
    restart: unless-stopped
    volumes:
    - postgres_data:/var/lib/postgresql/data
version: '3.8'
volumes:
  postgres_data: null
