# 簡化版監控堆疊 - 用於快速啟動和測試
version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

services:
  # Prometheus - 核心監控數據收集
  prometheus:
    image: prom/prometheus:v2.47.0
    container_name: ntn-prometheus-simple
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./prometheus/prometheus-minimal.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts:/etc/prometheus/alerts:ro

    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    networks:
      - monitoring
    restart: unless-stopped

  # Grafana - 數據可視化
  grafana:
    image: grafana/grafana:10.1.0
    container_name: ntn-grafana-simple
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    networks:
      - monitoring
    restart: unless-stopped
    depends_on:
      - prometheus

  # AlertManager - 告警管理
  alertmanager:
    image: prom/alertmanager:v0.26.0
    container_name: ntn-alertmanager-simple
    ports:
      - "9093:9093"
    volumes:
      - alertmanager_data:/alertmanager
      - ./alertmanager/alertmanager-minimal.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=info'
    networks:
      - monitoring
    restart: unless-stopped

  # Node Exporter - 系統資源監控
  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: ntn-node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring
    restart: unless-stopped
  
  operations-dashboard:
    build:
      context: ../
      dockerfile: monitoring/Dockerfile.operations
    container_name: ntn-operations-dashboard
    ports:
      - "8090:8090"
    volumes:
      - ./dashboard.html:/app/dashboard.html
    restart: unless-stopped
    networks:
      - monitoring