[tool:pytest]
# NTN Stack 統一 pytest 配置

# 指定測試目錄
testpaths = tests netstack/tests

# 異步測試模式 (pytest-asyncio 1.0.0 格式)
asyncio_mode = auto

# 測試發現模式
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 輸出設定
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --showlocals
    --durations=10

# 測試報告（僅在有報告目錄時啟用）
#    --html=tests/reports/pytest-report.html
#    --self-contained-html
#    --json-report
#    --json-report-file=tests/reports/pytest-report.json
#    --cov=netstack_api
#    --cov-report=html:tests/reports/coverage
#    --cov-report=term-missing
#    --cov-fail-under=70

# 日誌設定
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s (%(filename)s:%(lineno)d)
log_file_date_format = %Y-%m-%d %H:%M:%S

# 過濾警告
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:prometheus_client.*
    ignore::UserWarning:asyncio.*
    ignore::pytest.PytestDeprecationWarning

# 標記定義
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    network: marks tests that require network access
    docker: marks tests that require docker environment
    simworld: marks tests that require SimWorld service
    netstack: marks tests that require NetStack service
    unified_api: marks tests for unified API functionality
    asyncio: marks async tests (auto-applied)

# 並行測試設定
#addopts = -n auto  # 使用 pytest-xdist 進行並行測試（需要時啟用）

# 最小版本要求
minversion = 7.0 